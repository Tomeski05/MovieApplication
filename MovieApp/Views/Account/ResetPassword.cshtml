@model ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
}

@*<div class="container">

    <h1 class="display-4">Reset password</h1>

    <hr />
    <div class="row">
        <div class="offset-4 col-md-4">
            @if (Model?.IsSuccess == true)
            {
                <div class="alert alert-success" role="alert">
                    <p>
                        You have updated your password successfully.
                    </p>
                </div>
            }
            else
            {
                <form asp-action="ResetPassword">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="UserId" class="form-control" />
                    <input type="hidden" asp-for="Token" class="form-control" />
                    <div class="form-group">
                        <label asp-for="NewPassword" class="control-label"></label>
                        <input asp-for="NewPassword" class="form-control" />
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ConfirmNewPassword" class="control-label"></label>
                        <input asp-for="ConfirmNewPassword" class="form-control" />
                        <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Reset password" class="btn btn-primary" />
                    </div>
                </form>
            }

        </div>
    </div>

</div>*@

<h2>Reset Password</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Reset Password</h4>
        <hr />
        <div class="text-danger">
            @ViewBag.Message
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(a => a.ResetCode)
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
